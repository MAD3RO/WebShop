@model WebShop.Models.ViewModels.Account.LoginUserVM

@{
    ViewBag.Title = "Login";
}

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <!-- START-HEADER-MODAL -->
    <div class="modal fade" id="headerModal" tabindex="-1" role="dialog" aria-labelledby="headerModal"
         aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Don't Wait, Login now!</h4>
                </div>
                <div class="modal-body modal-body-sub">
                    <div class="row">
                        <div class="col-md-6" style="border-right: 1px dotted #C2C2C2;padding-right:3em;">
                            <div class="sap_tabs">
                                <div id="horizontalTab" style="display: block; width: 100%; margin: 0px;">
                                    <h3>Existing user</h3>
                                    <div class="tab-1 resp-tab-content" aria-labelledby="tab_item-0">
                                        <div class="form-horizontal" id="loginForm">
                                            <hr />
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                                <div class="col-md-10">
                                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Username" } })
                                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                                <div class="col-md-10">
                                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password" })
                                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <label class="control-label col-md-2" for="RememberMe">Remember me</label>
                                                <div class="col-md-10">
                                                    <div class="checkbox">
                                                        @Html.EditorFor(model => model.RememberMe)
                                                        @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" value="Login" class="btn btn-default" id="btnLogin" />
                                                    &nbsp;<a href="/account/create-account">Register</a>
                                                    @*&nbsp;<a href="#" onclick="saveForm()">Register</a>*@
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="OR" class="hidden-xs">OR</div>
                        </div>
                        <div class="col-md-6 modal_body_right modal_body_right1">
                            <div class="row text-center sign-with">
                                <div class="col-md-12">
                                    <h3>New user</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END-HEADER-MODAL -->

    <!-- password-script -->

    <script>
        //$("#headerModal").on("submit", "#loginForm", function (e) {
        //    e.preventDefault();

        //    var form = $(this);
        //    $.ajax({
        //        url: "/account/login",
        //        method: form.attr("method"),
        //        data: form.serialize(),
        //        success: function (partialResult) {
        //            $("#loginForm").html(partialResult);
        //            location.reload();
        //        }
        //    });

        //});
        $(document).ready(function () {
            $("#btnLogin").click(function () {
                var loginFormData = $("#loginForm").serialize();

                $.ajax({
                    type: "POST",
                    url: "/account/LoginPartial",
                    data: loginFormData,
                    success: function () {
                        alert("success!");
                        $("#headerModal").modal("show");
                        window.location.reload();
                    }
                    //success: function (e) { succeedLogin(e); },
                    //error: function (e) { failedToLogin(e); }
                });
            });
        });

                //function succeedLogin(e) {
                //    if (e == true) {
                //        window.location.reload();
                //    }
                //    else { alert(getDisplayStr("FailedLogin")); }
                //}
                //function failedToLogin(error) {
                //    alert(error);
                //}
                            //window.onload = function () {
                            //    document.getElementById("password1").onchange = validatePassword;
                            //    document.getElementById("password2").onchange = validatePassword;
                            //}

                            //function validatePassword() {
                            //    var pass2 = document.getElementById("password2").value;
                            //    var pass1 = document.getElementById("password1").value;
                            //    if (pass1 != pass2)
                            //        document.getElementById("password2").setCustomValidity("Passwords Don't Match");
                            //    else
                            //        document.getElementById("password2").setCustomValidity('');
                            //    //empty string means no validation error
                            //}
    </script>
    <!-- //password-script -->
}

