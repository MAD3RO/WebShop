@model WebShop.Models.ViewModels.Account.LoginUserVM

@{
    ViewBag.Title = "Login";
}

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}

<!-- START-HEADER-MODAL -->
<div class="modal fade" id="headerModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    &times;
                </button>
                <h4 class="modal-title" id="myModalLabel">Don't Wait, Login to Your Account!</h4>
            </div>
            <div class="modal-body modal-body-sub">
                <div class="row">
                    <div class="col-md-6" style="border-right: 1px dotted #C2C2C2;">
                        <div class="sap_tabs">
                            @*<div id="horizontalTab" style="display: block; width: 100%; margin: 0px;">*@
                            <div class="col-md-10 text-center" style="display:inline-block;">
                                <h3>
                                    Existing user
                                    <span class="input-group-text">
                                        <i class="fas fa-user-circle fa-3x" id="modalIcon"></i>
                                    </span>
                                </h3>

                            </div>
                            <div class="tab-1 resp-tab-content">
                                @using (Html.BeginForm("LoginPartial", "Account", FormMethod.Post, new { id = "loginForm" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="form-horizontal" style="margin-top:10px;">
                                        <span class="text-danger" id="login-error">Incorrect username or password</span>
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                            <div class="col-md-10">
                                                <span class="input-group-text">
                                                    <i class="fas fa-user"></i>
                                                </span>
                                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Username", @id = "asd" } })
                                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                            <div class="col-md-10">
                                                <span class="input-group-text">
                                                    <i class="fas fa-unlock-alt"></i>
                                                </span>
                                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password" })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                <label for="RememberMe">Remember me</label>
                                                @*<div class="checkbox" style="float:left;">*@
                                                @Html.EditorFor(model => model.RememberMe, new { @class = "form-control" })
                                                @*@Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })*@
                                                @*</div>*@
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-md-10">
                                                <input class="btn btn-default" id="btnLogin" type="submit" value="Login" style="width:100%;" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div id="OR" class="hidden-xs">OR</div>
                    </div>
                    <div class="col-md-6" style="padding:0px 15px;">
                        <div class="sap_tabs">
                            <div id="horizontalTab" style="display: block; width: 100%; margin: 0px;">
                                <div class="col-md-10 text-center" style="margin-bottom:20px;">
                                    <h3>
                                        New user
                                        <span class="input-group-text">
                                            <i class="fas fa-user-plus fa-3x" id="modalIcon"></i>
                                        </span>
                                    </h3>
                                </div>
                                <div class="tab-1 resp-tab-content">
                                    <div class="col-md-10">
                                        <p style="margin:20px; margin-top:10px;">
                                            Opening an account on our site will allow you to shop faster, stay up-to-date on the status of your account, and keep track of the account you previously created.
                                        </p>
                                    </div>
                                    <div class="col-md-10">
                                        <form action="/account/create-account">
                                            <input class="btn btn-default" type="submit" style="width:100%;" value="Register" />
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END-HEADER-MODAL -->
<!-- password-script -->

<script>
    $(document).ready(function () {

        $("#headerModal").on("submit", "#loginForm", function (e) {
            e.preventDefault();

            var form = $(this);
            $.ajax({
                url: form.attr("action"),
                method: form.attr("method"),
                data: form.serialize(),
                success: function (partialResult) {
                    if (partialResult === "error") {
                        $("#login-error").show();
                    }
                    else if (partialResult === "success") {
                        $("#headerModal").modal("hide");
                        setTimeout(function () { window.location.href = "/Shop/Index"; }, 35);
                    }
                }
            });
        });
        //function myLoginEnd(response) {
        //    if (response == true) {
        //        window.location.href = "/Home/Index";
        //    }
        //    else if (response == "error") {
        //        $("#_loadingBtnLogin").hide();
        //        $("#login_btn").show();
        //        $('.bt-login').prop('disabled', false);
        //        $("#error_msg").show();
        //        $("#_messageLogin").html("Failure! Invalid login attempt.");
        //    }
        //    else if (response == "verify") {
        //        $("#_loadingBtnLogin").hide();
        //        $("#login_btn").show();
        //        $('.bt-login').prop('disabled', false);
        //        $("#error_msg").show();
        //        $("#_messageLogin").html("You have not verified yet. Please check your mail!");
        //    }
        //    else {
        //        $("#_loadingBtnLogin").hide();
        //        $("#login_btn").show();
        //        window.location.href = response;
        //    }
        //}



            @*$("#headerModal").on("submit", "#loginForm", function (e) {
                e.preventDefault();

                var form = $(this);
                $.ajax({
                    //url: "/account/login",
                    url: form.attr("action"),
                    method: form.attr("method"),
                    //contentType: "application/json; charset=utf-8"
                    data: form.serialize(),
                    //success: function (result, status, xhr) {
                    //    if (ViewBab.Message == "Success" )
                    //}
                    success: function (partialResult) {
                        //$("#form-container").html(partialResult);
                        //$("#headerModal").modal("hide");
                        var test = '@TempData["LoginMessage"]';
                        //setTimeout(function () { location.reload(); }, 60);
                        console.log(test);
                    }
                });
            });*@
        });


    //$(document).ready(function () {
    //    $("#btnLogin").click(function () {
    //        var loginFormData = $("#loginForm").serialize();

    //        $.ajax({
    //            type: "POST",
    //            url: "/account/LoginPartial",
    //            data: loginFormData,
    //            success: function () {
    //                alert("success!");
    //                $("#headerModal").modal("show");
    //                window.location.reload();
    //            }
    //            //success: function (e) { succeedLogin(e); },
    //            //error: function (e) { failedToLogin(e); }
    //        });
    //    });
    //});

                //function succeedLogin(e) {
                //    if (e == true) {
                //        window.location.reload();
                //    }
                //    else { alert(getDisplayStr("FailedLogin")); }
                //}
                //function failedToLogin(error) {
                //    alert(error);
                //}
                            //window.onload = function () {
                            //    document.getElementById("password1").onchange = validatePassword;
                            //    document.getElementById("password2").onchange = validatePassword;
                            //}

                            //function validatePassword() {
                            //    var pass2 = document.getElementById("password2").value;
                            //    var pass1 = document.getElementById("password1").value;
                            //    if (pass1 != pass2)
                            //        document.getElementById("password2").setCustomValidity("Passwords Don't Match");
                            //    else
                            //        document.getElementById("password2").setCustomValidity('');
                            //    //empty string means no validation error
                            //}
</script>
<!-- //password-script -->
